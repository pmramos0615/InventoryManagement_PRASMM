@model InventoryManagement_PRASMM.Models.Products

@{
	ViewBag.Title = "Details";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
	<!-- /MESSAGES -->
	@if (TempData["error"] != null)
	{
		<div class="alert alert-danger rounded-pill alert-dismissible fade show">
			@TempData["error"]
			<button type="button" class="btn-close custom-close" data-bs-dismiss="alert" aria-label="Close"><i class="fas fa-xmark"></i></button>
		</div>
	}

	@using (Html.BeginForm("Save", "Products", FormMethod.Post, new { enctype = "multipart/form-data",id="formProducts"}))
	{
		if (Model != null && Model.ID > 0)
		{
			@Html.HiddenFor(a => a.ID)
		}
		<div class="accordions-items-seperate mb-2" id="accordionSpacingExample">
			<div class="accordion-item border" data-select2-id="55">
				<h2 class="accordion-header" id="headingSpacingOne">
					<button type="button" class="accordion-button bg-white" data-bs-toggle="collapse" data-bs-target="#productDetail" aria-expanded="true" aria-controls="SpacingOne" style="border-bottom: 1px solid #CECECE;">
						<div class="d-flex align-items-center justify-content-between flex-fill">
							<span class="d-flex align-items-center">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="orange" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info text-primary me-2">
									<circle cx="12" cy="12" r="10"></circle>
									<line x1="12" y1="16" x2="12" y2="12"></line>
									<line x1="12" y1="8" x2="12.01" y2="8"></line>
								</svg>
								<span style="font-weight:500; color:black">Product Information</span>
							</span>
						</div>
					</button>
				</h2>
				<div id="productDetail" class="accordion-collapse collapse show" aria-labelledby="headingSpacingOne" data-bs-parent="#accordionSpacingExample">
					<div class="accordion-body">
						<div class="col-12">
							@* 	<div class="row">
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Store<span class="text-danger ms-1">*</span></label>
										@Html.DropDownListFor(a => a.StoreID, new SelectList(ViewBag.Store, "ID", "Name"), "Select", new { @class = "form-control select", @style = "width:100%" })
										@Html.HiddenFor(a => a.StoreID)
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
								</div>
							</div> *@
							<div class="row">
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Product Name<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.Name, new { @class = "form-control", @required = "true" })
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>SKU<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.SKU, new { @class = "form-control", @required = "true" })
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Category<span class="text-danger ms-1">*</span></label>
										@Html.DropDownListFor(a => a.CategoryID, new SelectList(ViewBag.Category, "ID", "Name"), "Select", new { @class = "form-control select", @style = "width:100%", @required = "true" })
										@Html.HiddenFor(a => a.CategoryID)
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Sub Category</label>
										<select id="ddSubCategory" class="form-control select" style="width:100%">
											<option value="0" class="selectmodelDefault">Select</option>
										</select>
										@Html.HiddenFor(a => a.SubCategoryID)
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Brand<span class="text-danger ms-1">*</span></label>
										@Html.DropDownListFor(a => a.BrandID, new SelectList(ViewBag.Brand, "ID", "Name"), "Select", new { @class = "form-control select", @style = "width:100%", @required = "true" })
										@Html.HiddenFor(a => a.BrandID)
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Unit of measure<span class="text-danger ms-1">*</span></label>
										@Html.DropDownListFor(a => a.UnitID, new SelectList(ViewBag.Unit, "ID", "Code"), "Select", new { @class = "form-control select", @style = "width:100%", @required = "true" })
										@Html.HiddenFor(a => a.UnitID)
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Barcode<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.BarCode, new { @class = "form-control", @required = "true" })
									</div>
								</div>
								<div class="col-md-6 col-sm-12">
									<div class="form-group">
										<label>Item Code<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.ItemCode, new { @class = "form-control", @required = "true" })
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-md-12">
									<div class="form-group">
										<label>Description</label>
										@Html.TextAreaFor(a => a.Description)
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="accordions-items-seperate mb-2" id="accordion2">
			<div class="accordion-item border">
				<h2 class="accordion-header" id="headingSpacingTwo">
					<button type="button" class="accordion-button bg-white" data-bs-toggle="collapse" data-bs-target="#productDetail2" aria-expanded="false" aria-controls="productDetail2" style="border-bottom: 1px solid #CECECE;">
						<div class="d-flex align-items-center justify-content-between flex-fill">
							<span class="d-flex align-items-center">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="orange" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-dollar-sign text-primary me-2">
									<line x1="12" y1="1" x2="12" y2="23"></line>
									<path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
								</svg>
								<span style="font-weight:500; color:black">Pricing</span>
							</span>
						</div>
					</button>
				</h2>
				<div id="productDetail2" class="accordion-collapse collapse show" aria-labelledby="headingSpacingTwo" data-bs-parent="#accordion2">
					<div class="accordion-body">
						<div class="col-12">
							<div class="row">
								<div class="col-lg-4 col-md-6 col-sm-12">
									<div class="form-group">
										<label>Aquired Cost<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.AcquiredCost, new{ @class = "form-control", @required = "true", type = "text", value = String.Format("{0:F2}", Model.AcquiredCost)})

									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12">
									<div class="form-group">
										<label>Markup Price<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.MarkupPrice, new { @class = "form-control", @required = "true", Type = "number" })
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12">
									<div class="form-group">
										<label>SRP<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.SRP, new { @class = "form-control", @required = "true", Type = "number" })
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12">
									<div class="form-group">
										<label>Alert Quantity<span class="text-danger ms-1">*</span></label>
										@Html.TextBoxFor(a => a.MinQty, new { @class = "form-control", @required = "true", Type = "number" })
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12">
									<div class="form-group">
										<div class="col-12">
											<label>Tax<span class="text-danger ms-1">*</span></label>
											@Html.DropDownListFor(a => a.TaxID, new SelectList(ViewBag.TaxTypes, "Id", "Description"), "Select", new { @class = "form-control select", @style = "width:100%", @required = "true" })
										</div>
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12">
									@Html.HiddenFor(a => a.TaxAmountID)
									<div class="form-group">
										<div class="col-12">
											<label>Amount<span class="text-danger ms-1">*</span></label>
											<select id="ddTaxAmount" class="form-control select" style="width:100%">
												<option value="0" class="selectmodelDefault">Select</option>
											</select>
										</div>
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12">
									<div class="form-group">
										<label>ProductType<span class="text-danger ms-1">*</span></label>
										@Html.DropDownListFor(a => a.ProductTypeID, new SelectList(ViewBag.ProductType, "ID", "Description"), "Select", new { @class = "form-control select", @style = "width:100%", @required = "true" })
										@Html.HiddenFor(a => a.ProductTypeID)
										@* @Html.TextBoxFor(a => a.SRP, new { @class = "form-control", @required = "true", Type = "number" }) *@
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12" style="display:none" id="variantselection">
									@Html.HiddenFor(a => a.VariantTypeID)
									<div class="form-group">
										<label>Variant Type<span class="text-danger ms-1">*</span></label>
										<select id="ddVariantType" class="form-control select" style="width:100%">
											<option value="0" class="selectmodelDefault">Select</option>
										</select>
									</div>
								</div>
								<div class="col-lg-4 col-md-6 col-sm-12" style="display:none" id="variantspecific">
									@Html.HiddenFor(a => a.VarianSpecifiedID)
									<div class="form-group">
										<label>Specific<span class="text-danger ms-1">*</span></label>
										<select id="ddVariantSpecific" class="form-control select" style="width:100%">
											<option value="0" class="selectmodelDefault">Select</option>
										</select>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="accordions-items-seperate" id="accordion3">
			<div class="accordion-item border">
				<h2 class="accordion-header" id="headingSpacingThree">
					<button type="button" class="accordion-button bg-white" data-bs-toggle="collapse" data-bs-target="#productDetail3" aria-expanded="false" aria-controls="productDetail2" style="border-bottom: 1px solid #CECECE;">
						<div class="d-flex align-items-center justify-content-between flex-fill">
							<span class="d-flex align-items-center">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="orange" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-image text-primary me-2">
									<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
									<circle cx="8.5" cy="8.5" r="1.5"></circle>
									<polyline points="21 15 16 10 5 21"></polyline>
								</svg>
								<span style="font-weight:500; color:black">Image</span>
							</span>
						</div>
					</button>
				</h2>
				<div id="productDetail3" class="accordion-collapse collapse show" aria-labelledby="headingSpacingThree" data-bs-parent="#accordion3">
					<div class="row" style="margin:auto">
						<!-- Image Upload Section -->
						<div class="col-lg-4 col-md-6 mt-2 mb-2">
							<div class="border border-warning rounded p-3 text-center" style="height: 200px; width: 100%;">
								<input type="file" id="imageUpload" name="Attachment" style="display: none;" />
								<div id="divUpload" 
								class="d-flex flex-column align-items-center justify-content-center"
								style="height: 100%; cursor: pointer;">
									<i data-feather="plus-circle" class="fs-2 text-warning"></i>
									<h4>Add Images</h4>
								</div>
							</div>
						</div>

						<!-- Image Preview Section -->
						<div class="col-lg-4 col-md-6 mt-2 mb-2">
							<div class="border border-warning rounded p-3 text-center" style="height: 200px; width: 100%;">

								<div class="position-relative" style="height: 100%; width: 100%;">
									@if (Model.ID == 0)
									{
										<img id="imagePreview"
											 src="#"
											 class="img-fluid rounded"
											 style="display: none; height: 100%;width: 100%; object-fit: inherit;" />
									}
									else
									{
										<img id="imagePreview"
											 src="@Model.ImageURL"
											 class="img-fluid rounded"
											 style="height: 100%;width: 100%; object-fit: inherit;" />
									}
									<button type="button"
											class="btn-close btn-close-white position-absolute top-0 end-0 bg-warning rounded-circle imagePreview-close"
											style="transform: translate(50%, -50%);">
									</button>
								</div>
							</div>
							</div>
						</div>
					</div>

				</div>
			</div>
		

		<div class="col-md-12 mt-2">
			<div class="float-end col-lg-3 col-md-6 col-sm-12 row">
				<div class="col-6">
					<button type="button" class="btn btn-dark col-12 w-100">Cancel</button>
				</div>

				<div class="col-6">
					<button type="button" class="btn btn-primary col-12 w-100 btnSwal">Save</button>
				</div>
			</div>
		</div>
		<br />
		}

	
	@section scripts {
		<link href="~/css/swalcustom.css" rel="stylesheet" />
		<script src="~/js/pages/products.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.10.0/lottie.min.js"></script>
		<script src="~/js/feather.min.js"></script>
		<script src="~/plugins/sweetalert/sweetalerts.min.js"></script>
		<script>
			feather.replace()

			$(document).ready(function() {
				$('#divUpload').on('click',function(){
					$('#imageUpload').click();
				});

				$('#imageUpload').on('change', function(event) {
					var reader = new FileReader();
					reader.onload = function() {
						var output = $('#imagePreview');
						output.attr('src', reader.result);
						output.show();
					};
					reader.readAsDataURL(event.target.files[0]);
				});

				//-----------------------------START OF DRAG AND DROP FUNCTION
				const dropZone = $("#divUpload");
				const fileInput = $("#imageUpload");
				const preview = $("#imagePreview");

				// Handle file drop
				dropZone.on("drop", function (event) {
					event.preventDefault();
					dropZone.css("border-color", "#ccc");
					const files = event.originalEvent.dataTransfer.files;

					// Validate the file type
					if (files.length && files[0].type.startsWith("image/png") || files[0].type.startsWith("image/jpeg")) {
						const reader = new FileReader();
						reader.onload = function (e) {
							preview.attr("src", e.target.result).show();
						};
						reader.readAsDataURL(files[0]);
					} else {
						alert("Please upload a valid image file.");
					}
				});

				fileInput.on("change", function () {
					const file = fileInput[0].files[0];
					if (file && file.type.startsWith("image/")) {
						const reader = new FileReader();
						reader.onload = function (e) {
							preview.attr("src", e.target.result).show();
						};
						reader.readAsDataURL(file);
					} else {
						alert("Please upload a valid image file.");
					}
				});
				//----------------------------- END OF DRAG AND DROP FUNCTION
			});
		</script>
	}
